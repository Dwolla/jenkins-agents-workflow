
name: Build
description: Build and push docker images with Docker Buildx
inputs:
  DOCKERHUB_USERNAME:
    type: string
    required: true  
    description: The username to authenticate with dockerhub
  DOCKERHUB_TOKEN:
    type: string
    required: true 
    description: The token to authenticate with dockerhub
  BASE_TAG:
    type: string
    required: true
    description: The tag of the base image
  TAG_NAME:
    type: string
    required: true
    description: ARG input into Dockerfile for tag
  IMAGE_NAME:
    type: string
    required: true
    description: Name of image to publish to dockerhub, e.g. 'dwolla/my-image'
  PLATFORMS:
    description: Platforms to build for (i.e. linux/arm64)
    type: string
    required: false
    default: linux/amd64,linux/arm64
  SUB_DIRECTORY:
    description: Sub directory where dockerfile is located
    type: string
    required: false

runs:
  using: composite
  steps:

    # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.DOCKERHUB_USERNAME }}
        password: ${{ inputs.DOCKERHUB_TOKEN }}

    # https://github.com/docker/metadata-action
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          ${{ inputs.IMAGE_NAME }}
        # Docker tags based on the following events/attributes
        tags: |
          prefix=${{ inputs.BASE_TAG }}-,type=sha
    # https://github.com/docker/build-push-action

    - name: Build and push
      uses: docker/build-push-action@v2
      if:  ${{ inputs.SUB_DIRECTORY == '' }}
      with:
        context: '{{ defaultContext }}'
        platforms: ${{ inputs.PLATFORMS }}
        push: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v')) }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.TAG_NAME }}=${{ inputs.BASE_TAG }}

    - name: Build and push
      uses: docker/build-push-action@v2
      if:  ${{ inputs.SUB_DIRECTORY != '' }}
      with:
        context: '{{ defaultContext }}:${{inputs.SUB_DIRECTORY}}'
        platforms: ${{ inputs.PLATFORMS }}
        push: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v')) }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.TAG_NAME }}=${{ inputs.BASE_TAG }}